name: $(BuildID)

resources:
- repo: self

variables:
  build.clean: all
  platform: x64

trigger:
  branches:
    include:
      - master

pr: none

stages:
- stage: Deploy
  displayName: 'Deploy website'
  continueOnError: false
  pool: navxdefault
  workspace:
    clean: all
  steps:
  - task: DownloadPipelineArtifact@2
    displayName: 'Download Website Artifact'
    inputs:
      buildType: 'specific'
      project: 'f0d284ed-af49-4b2a-9d2e-01e485482d6e'
      definition:
      buildVersionToDownload: 'latest'
      artifactName: 'website'
      path: '$(Pipeline.Workspace)\website'

  - task: FtpUpload@2
    displayName: 'Upload of website'
    condition: succeeded()
    inputs:
      credentialsOption: inputs
      serverUrl: '$(ftpServer)'
      username: '$(ftpUsername)'
      password: '$(ftpPassword)'
      rootDirectory: '$(Pipeline.Workspace)\website\'
      filePatterns: '**'
      remoteDirectory: '/opt/bitnami/apps/navxdocs/htdocs'
      clean: true
      cleanContents: false
      preservePaths: true
      trustSSL: true